#!/bin/sh
#
# Watches the markdown file (*.md) specified, and compiles it using
# Pandoc on each save.

################################################################################
# Default Flags to be used

INPUT="$@"
# Output File
PDF_OUTPUT="$HOME/default.pdf"

# Compilation Directory for intermediate files
TMP_COMPILE_DIR="$HOME/.pandoc/compile/"
# Compilation name for intermediate tex file
TEX_NAME=default
# Compilation file for intermediate tex file
TEX_FILE="$TMP_COMPILE_DIR$TEX_NAME".tex
# Finished Compilation file location
TMP_PDF_LOCATION="$TMP_COMPILE_DIR$TEX_NAME".pdf


# Pandoc Flags and Header

PANDOC_FLAGS="--listings"
PANDOC_FLAGS=$PANDOC_FLAGS" -H /home/cooper/.pandoc/header.tex" 	# Extension header file

################################################################################

# Verify the correct file has been given
verifyFile () {
	if [ -z "$INPUT" ]; then
		echo "Error: Missing filename argument"
		echo "You must specify a markdown file for pandocWatch to use."
		exit 1
	fi

	# Verify that file exists
	if [ ! -f "$INPUT" ]; then
		echo "Error: Specified file not found"
		exit 1
	fi

	if [ "${INPUT##*.}" != "md" ]; then
		echo "Error: pandocWatch can only be used on Markdown (.md) files."
		exit 1
	fi
}

# Compile a file using Pandoc and pdflatex for faster compilation
compile () {
	echo "`date +"%H:%M:%S"` - Rendering "

	pandoc $PANDOC_FLAGS -o "$TEX_FILE" "$INPUT"

	if ! [ $? -eq 0 ]; then
		echo "Pandoc Compilation Error"
		return
	fi

	# Move to pdflatex if successful
	( cd $TMP_COMPILE_DIR
	  texfot --quiet pdflatex "$TMP_COMPILE_DIR$TEX_NAME"
	)

	if ! [ $? -eq 0 ]; then
		echo "pdflatex compilation error"
		return
	fi

	cp "$TMP_COMPILE_DIR""default.pdf" "$PDF_OUTPUT"
}

main () {
	verifyFile "$INPUT"

	compile
	zathura "$PDF_OUTPUT" & disown

	# Continuously compile on save
	echo "`date +"%H:%M:%S"` - Watch successfully initialized."

	while true; do
		inotifywait -q -e modify "$INPUT"
		compile
	done
}

main
